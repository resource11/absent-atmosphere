---
import { Icon } from "astro-iconify";
const { ariaLabel, icon, iconAfter, iconBefore, iconClasses, size, href, linkClasses } = Astro.props;
const url = new URL(Astro.props.href, Astro.url);
import "./Link.css";
import "../Icon/Icon.css";

const LinkSizes = {
  small: "small",
  large: "large",
};

const linkSizeClass = size !== LinkSizes.small ? "large" : "small";
const linkIconClass = icon ? `icon` : null;
const linkExtraClasses = `root ${linkSizeClass} ${linkClasses}`;
const iconExtraClasses = iconAfter && icon ? `iconAfter icon ${iconClasses}` : `icon ${iconClasses}`;

interface Props {
  href: string;
  icon?: string | null;
  iconAfter?: boolean;
  iconBefore?: boolean;
  iconClasses?: string;
  linkClasses?: string;
  size?: string;
}

// const isCurrent = Astro.url.pathname.replace(/\/$/, '') === url.href.replace(/\/$/, '');
const isCurrent = Astro.url.href.replace(/\/$/, '') === url.href.replace(/\/$/, '');
---

<a
  href={href}
  aria-current={isCurrent ? "page" : null}
  aria-label={ariaLabel ? ariaLabel : null}
  class={linkExtraClasses}
  {...Astro.props}
>
  {iconBefore && <span class="iconSpan"><Icon name={icon} class={iconExtraClasses}></span>}
  <slot />
  {iconAfter && <span class="iconSpan"><Icon name={icon} class={iconExtraClasses}></span>}
</a>
