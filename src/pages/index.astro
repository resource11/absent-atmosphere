---
import { getCollection, getEntry } from "astro:content";

import Layout from "../layouts/Layout.astro";
import LineDot from "../components/LineDot/LineDot.astro";
import HeadingAccentImage from "../assets/images/hero-masked.svg";

import RecentBgMasked from "../assets/images/sm-bot-white-diamond.svg";
import { Image } from "astro:assets";
import recipeImg from "../assets/images/home/accessibility-favored-react-components.jpg";
import "../styles/page-styles/Home.css";
import "../components/Card/Card.css";

const contentList = await getEntry("dataYML", "content-list");
const recentSpeaking = contentList.data.recentSpeaking;
console.log(JSON.stringify(recentSpeaking, null, 2));

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  // const featuredPosts = blogEntries.filter((entry) => entry.data.isFeatured);
  return blogEntries.map((data) => ({
    params: { slug: data.slug },
    props: { data },
  }));
}

const featuredPosts = await getCollection("blog", ({ data }) => {
  return data.isFeatured === true;
});

const pageTitle = "Kathleen McMahon | Engineer - Designer - Speaker";

const cardListClasses = `cardUl stackCardList grid`;
const postListClasses = `postUl, stackPostList`;

// import { SolidCard } from "../components/Card/SolidCard";
import { Card } from "../components/Card/Card";
import CTALink from "../components/CTALink/CTALink.astro";
import Link from "../components/Link/Link.astro";
---

<Layout pageTitle={pageTitle}>
  <article class="bodyWrapper">
    <img src={HeadingAccentImage.src} alt="" class="heroImageMasked" />
    <header class="homeHeader">
      <h1 class="homeH1">Kathleen McMahon</h1>
      <p class="homeIntroPara">
        Hello! I'm Kathleen, an engineer, designer, speaker, and occasional
        writer. This is the space where I cultivate my interests.
      </p>
      <LineDot />
    </header>
    <article class="contentWrapper">
      <img src={RecentBgMasked.src} alt="" class="recentTalksBgMasked" />
      <article class="css.recentTalks">
        <h2 class="recentTalksH2">
          Recent talks, <br />
          podcasts, streams
        </h2>
        <!-- <ul class="cardListClasses">
          {
            recentSpeaking.map((speak) => (
              <li class="cardListItem">
                <Card
                  cardContentWrapperClasses="cardContentWrapper"
                  cardFooterWrapperClasses="cardFooterWrapper"
                >
                  <Image
                    slot="image"
                    src={speak.image}
                    alt={speak.name}
                    width={1600}
                    height={900}
                    style="height: 100%; width: 100%; object-fit: cover;"
                  />
                  <Link
                    href={speak.link}
                    aria-label={speak.ctaAria ? speak.ctaAria : null}
                    linkClasses="cardFooterLink"
                    icon={"arrow-right"}
                    iconAfter
                    size="small"
                    iconSpanClasses="cardFooterLinkIcon"
                  >
                    {speak.cta}
                  </Link>
                </Card>
              </li>
            ))
          }
        </ul> -->
        <ul class={cardListClasses}>
          {
            recentSpeaking.map((speak) => (
              <li class="cardListItem">
                <article class="cardRoot">
                  {speak.image && (
                    <header class="cardHeader">
                      <Image
                        slot="image"
                        src={speak.image}
                        alt={speak.name}
                        width={1600}
                        height={900}
                        style="height: 100%; width: 100%; object-fit: cover;"
                      />
                    </header>
                  )}
                  <div class={"cardContentWrapper"}>
                    <footer class={"cardFooterWrapper"}>
                      <Link
                        href={speak.link}
                        aria-label={speak.ctaAria ? speak.ctaAria : null}
                        linkClasses="cardFooterLink"
                        icon={"arrow-right"}
                        iconAfter
                        size="small"
                        iconSpanClasses="cardFooterLinkIcon"
                      >
                        {speak.cta}
                      </Link>
                    </footer>
                  </div>
                </article>
              </li>
            ))
          }
        </ul>
        <CTALink
          size="small"
          href="/speak/"
          CTALinkClasses="ctaLink"
          CTAIconSpanClasses="ctaLinkIcon"
        >
          Browse all media
        </CTALink>
      </article>
      <hr class="purpleRedHR" />
      <article class="featuredPosts">
        <h2>Featured posts</h2>
        <ul class={postListClasses}>
          {
            featuredPosts.map((post) => (
              <li class="postListItem">
                <Link href={`posts/${post.slug}`} linkClasses="postListLink">
                  {post.data.title}
                </Link>
                <span class="postListPublishedDate">
                  <span class="postListPublished">Published:</span>{" "}
                  {post.data.date.toDateString()}
                </span>
              </li>
            ))
          }
        </ul>
        <CTALink
          size="small"
          href="/write/"
          CTALinkClasses="ctaLink"
          CTAIconSpanClasses="ctaLinkIcon"
        >
          Browse all writing
        </CTALink>
      </article>
    </article>
  </article>
</Layout>
