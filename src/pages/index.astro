---
import { getCollection, getEntry, getEntries } from "astro:content";

import HomeLayout from "../layouts/HomeLayout.astro";
import HeadingAccentImage from "../assets/images/hero-masked.svg";
import RecentBgMasked from "../assets/images/sm-bot-white-diamond.svg";
import { Image } from "astro:assets";
import recipeImg from "../assets/images/home/accessibility-favored-react-components.jpg";
import "../styles/page-styles/home.css";

const contentList = await getEntry("dataYaml", "content-list");

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  return blogEntries.map((data) => ({
    params: { slug: data.slug },
    props: { data },
  }));
}
const featuredPosts = await getCollection("blog", ({ data }) => {
  return data.isFeatured === true;
});

const pageTitle = "Kathleen McMahon";

// import React from "react";

// import { useExtraClasses } from "../utils/useExtraClasses";
// import SEO from "../components/seo";

// import { Card } from "../components/Card";
import CTALink from "../components/CTALink/CTALink.astro";
import Link from "../components/Link/Link.astro";

console.log(JSON.stringify(featuredPosts, null, 2));
---

<HomeLayout
  pageTitle={pageTitle}
  pageHeader="homeHeader"
  pageH1Class="homeH1"
  pageBgImage={HeadingAccentImage.src}
  pageBgImageClass="heroImageMasked"
  pageIntroPara="homeIntroPara"
>
  <img src={RecentBgMasked.src} alt="" class="recentTalksBgMasked" />
  <article class="css.recentTalks">
    <h2 class="recentTalksH2">
      Recent talks, <br />
      podcasts, streams
    </h2>
    <ul class="cardListClasses">
      <!-- {
        recentSpeaking.map((speak) => (
          <li className={css.cardListItem}>
            <Card
              extraClasses={{
                cardContentWrapper: css.cardContentWrapper,
                cardFooterWrapper: css.cardFooterWrapper,
              }}
              footerContent={
                <Link
                  aria-label={speak.ctaAria}
                  extraClasses={{
                    root: css.cardFooterLink,
                    iconSpan: css.cardFooterLinkIcon,
                  }}
                  icon={faArrowRight}
                  iconAfter={true}
                  size="small"
                  to={speak.link}
                >
                  {speak.cta}
                </Link>
              }
              image={speak.relativePath}
              imageAlt={speak.name}
            />
          </li>
        ))
      } -->

      <Image
        src={recipeImg}
        alt="recipe"
        style="height: 100%; width: 100%; object-fit: cover;"
      />
    </ul>
    <!-- <CTALink
      size="small"
      to="/speak/"
      variant="link"
      extraClasses={{ root: css.ctaLink, iconSpan: css.ctaLinkIcon }}
    >
      Browse all media
    </CTALink> -->
  </article>
  <hr class="purpleRedHR" />
  <article class="featuredPosts">
    <h2>Featured posts</h2>
    <ul class="postListClasses">
      {
        featuredPosts.map((post) => (
          <li class="postListItem">
            <Link href={`write/${post.slug}`} linkClasses="postListLink">
              {post.data.title}
            </Link>
            <span class="postListPublishedDate">
              <span class="postListPublished">Published:</span> {post.data.date}
            </span>
            <p class="postListExcerpt">{post.data.excerpt}</p>
          </li>
        ))
      }
    </ul>
    <CTALink
      size="small"
      href="/write/"
      CTALinkClasses="ctaLink"
      CTAIconSpanClasses="ctaLinkIcon"
    >
      Browse all writing
    </CTALink>
  </article>
</HomeLayout>
